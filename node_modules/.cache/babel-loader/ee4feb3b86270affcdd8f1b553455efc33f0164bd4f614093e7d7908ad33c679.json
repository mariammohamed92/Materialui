{"ast":null,"code":"var _jsxFileName = \"D:\\\\Materialui\\\\target\\\\src\\\\Compontent\\\\Profile\\\\Profile.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\nfunction MyApp() {\n  _s();\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      width: '500%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      borderRadius: 1,\n      p: 3\n    },\n    children: [theme.palette.mode, \" mode\", /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        ml: 1\n      },\n      onClick: colorMode.toggleColorMode,\n      color: \"inherit\",\n      children: theme.palette.mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(MyApp, \"80lvBfk7TN8cUIlLm9bQxIykp7M=\", false, function () {\n  return [useTheme];\n});\n_c = MyApp;\nexport default function ToggleColorMode() {\n  _s2();\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s2(ToggleColorMode, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n_c2 = ToggleColorMode;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"ToggleColorMode\");","map":{"version":3,"names":["React","IconButton","Box","useTheme","ThemeProvider","createTheme","Brightness4Icon","Brightness7Icon","jsxDEV","_jsxDEV","ColorModeContext","createContext","toggleColorMode","MyApp","_s","theme","colorMode","useContext","sx","display","width","alignItems","justifyContent","bgcolor","color","borderRadius","p","children","palette","mode","ml","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToggleColorMode","_s2","setMode","useState","useMemo","prevMode","Provider","value","_c2","$RefreshReg$"],"sources":["D:/Materialui/target/src/Compontent/Profile/Profile.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\n\r\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\r\n\r\nfunction MyApp() {\r\n  const theme = useTheme();\r\n  const colorMode = React.useContext(ColorModeContext);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        width: '500%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        bgcolor: 'background.default',\r\n        color: 'text.primary',\r\n        borderRadius: 1,\r\n        p: 3,\r\n      }}\r\n    >\r\n      {theme.palette.mode} mode\r\n      <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\r\n        {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function ToggleColorMode() {\r\n  const [mode, setMode] = React.useState('light');\r\n  const colorMode = React.useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n      },\r\n    }),\r\n    [],\r\n  );\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n        },\r\n      }),\r\n    [mode],\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <MyApp />\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}