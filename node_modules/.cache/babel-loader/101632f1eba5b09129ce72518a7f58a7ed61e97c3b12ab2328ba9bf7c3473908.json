{"ast":null,"code":"var _jsxFileName = \"D:\\\\Materialui\\\\target\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Layout from \"./Compontent/Layout/Layout\";\nimport Logout from \"./Compontent/Logout/Logout\";\nimport Home from \"../src/Compontent/Home/Home\";\nimport Create from \"./Compontent/Create/Create\";\nimport Settings from \"./Compontent/Settings/Settings\";\nimport Profile from './Compontent/Profile/Profile';\n//import NotFound from './Compontent/NoFound/NoFound';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport getDesignTokens from './Style/Usetheme';\n//import { grey } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\ngetDesignToken;\nfunction App() {\n  _s();\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      borderRadius: 1,\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        mr: {\n          md: 1,\n          sm: 2\n        },\n        pt: 7\n      },\n      onClick: colorMode.toggleColorMode,\n      color: \"inherit\",\n      children: theme.palette.mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {\n        sx: {\n          color: \"orange\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 87\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"80lvBfk7TN8cUIlLm9bQxIykp7M=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default function ToggleColorMode() {\n  _s2();\n  const [mode, setMode] = React.useState(localStorage.getItem(\"currentMode\"));\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      localStorage.setItem(\"currentMode\", theme.palette.mode === 'dark' ? 'light' : 'dark');\n      setMode(prevMode => prevMode === 'dark' ? 'light' : 'dark');\n    }\n  }), []);\n\n  /*const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n          ? {\n              ali:{\n                main: '#3f50b5',\n              },\n              roma:{\n                main: grey[400]\n              }\n            }\n          : {\n              // palette values for dark mode\n              ali:{\n                main: \"teal\",\n              },\n              roma:{\n                main:grey[700]\n       }\n            }),\n        },\n      }),\n    [mode],\n  );*/\n\n  let routes = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }, this)\n    }, {\n      path: '*',\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this)\n    }, {\n      path: 'create',\n      element: /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 34\n      }, this)\n    }, {\n      path: 'profile',\n      element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: 'settings',\n      element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 36\n      }, this)\n    }, {\n      path: 'logout',\n      element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 34\n      }, this)\n    }\n    //  {path:'/' ,element:<Home/>},\n    ]\n  }]);\n\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n      value: colorMode,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(RouterProvider, {\n          router: routes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s2(ToggleColorMode, \"PnF6ciatIUoPrpP2mZ8jcLIXyR4=\");\n_c2 = ToggleColorMode;\n;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ToggleColorMode\");","map":{"version":3,"names":["React","createBrowserRouter","RouterProvider","Layout","Logout","Home","Create","Settings","Profile","IconButton","Box","useTheme","ThemeProvider","createTheme","Brightness4Icon","Brightness7Icon","getDesignTokens","jsxDEV","_jsxDEV","Fragment","_Fragment","ColorModeContext","createContext","toggleColorMode","getDesignToken","App","_s","theme","colorMode","useContext","sx","display","width","alignItems","justifyContent","bgcolor","color","borderRadius","p","children","mr","md","sm","pt","onClick","palette","mode","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToggleColorMode","_s2","setMode","useState","localStorage","getItem","useMemo","setItem","prevMode","routes","path","element","index","Provider","value","router","_c2","$RefreshReg$"],"sources":["D:/Materialui/target/src/App.js"],"sourcesContent":["import React from 'react'\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Layout from \"./Compontent/Layout/Layout\";\nimport Logout from \"./Compontent/Logout/Logout\";\nimport Home from \"../src/Compontent/Home/Home\";\nimport Create from \"./Compontent/Create/Create\";\nimport Settings from \"./Compontent/Settings/Settings\";\nimport Profile from './Compontent/Profile/Profile';\n//import NotFound from './Compontent/NoFound/NoFound';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport getDesignTokens from './Style/Usetheme';\n//import { grey } from '@mui/material/colors';\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\ngetDesignToken\n\n\n function App() {\n\n\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        borderRadius: 1,\n        p: 3,\n      \n       \n      }}\n    >\n\n      <IconButton sx={{  mr:{md:1,sm:2 },pt:7}} onClick={colorMode.toggleColorMode} color=\"inherit\" >\n        {theme.palette.mode === 'dark' ? <Brightness7Icon sx={{ color:\"orange\"}} /> : <Brightness4Icon />}\n      </IconButton>\n    </Box>\n  );\n}\n\n  export default function ToggleColorMode() {\n    const [mode, setMode] = React.useState(localStorage.getItem(\"currentMode\"));\n    const colorMode = React.useMemo(\n      () => ({\n        toggleColorMode: () => {\n          localStorage.setItem(\"currentMode\" ,theme.palette.mode=== 'dark' ? 'light' : 'dark');\n          setMode((prevMode) => (prevMode === 'dark' ? 'light' : 'dark'));\n        },\n      }),\n      [],\n    );\n  \n  /*const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n          ? {\n              ali:{\n                main: '#3f50b5',\n              },\n              roma:{\n                main: grey[400]\n              }\n            }\n          : {\n              // palette values for dark mode\n              ali:{\n                main: \"teal\",\n              },\n              roma:{\n                main:grey[700]\n\n      }\n            }),\n        },\n      }),\n    [mode],\n  );*/\n\n  let routes = createBrowserRouter([{\n    path: '/', element: <Layout />,\n    children: [\n      { index: true, element: <Home /> },\n      { path: '*', element: <Home /> },\n\n      { path: 'create', element: <Create /> },\n      { path: 'profile', element: <Profile />},\n      { path: 'settings', element: <Settings /> },\n      { path: 'logout', element: <Logout /> },\n    //  {path:'/' ,element:<Home/>},\n\n    ]\n  }])\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n\n  return (\n    <>\n        <ColorModeContext.Provider value={colorMode}>\n\n      <ThemeProvider theme={theme}>\n        <App />\n        <RouterProvider router={routes} />\n\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n\n\n    </>\n  );\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}